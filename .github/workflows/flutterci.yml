name: FlutterCI

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@master
        with:
          flutter-version: 1.22.6
          channel: stable

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.4
        with:
          fileName: key.jks
          encodedString: ${{ secrets.KEY_JKS }}
        
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          
      - name: Get Packages
        run: flutter pub get
            
      #- name: Create Splash
      #  run: flutter pub run flutter_native_splash:create
        
      - name: Build App
        run: flutter build apk --split-per-abi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Apk to Release
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: build/app/outputs/apk/release/*.apk

#      - name: Upload to Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: apk-release
#          path: build/app/outputs/apk/release/*-release.apk

